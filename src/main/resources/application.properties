#base datos a la que nos conectamos
spring.jpa.database=postgresql
# para ver las querys que se forman por JPA que son JHQL
spring.jpa.show-sql=false
#comportamiento de la bbdd cuando se manejan los schemas, a la hora de arrancar u parar la bbdd
#si se trata de un entorno de PRO, dejar a "none" para que no haya alteraciones.
#con update, si no existe la tabla, la crea, cuando arranca el proyecto, pero la base de datos SI debe existir.
spring.jpa.hibernate.ddl-auto=update

#cadena de conexion a la base de datos de mi maquina local.
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://localhost/demo_heroku2
spring.datasource.username=postgres
spring.datasource.password=123

#despliegue en Heroku, para que el asigne los valores a través de variables
#spring.datasource.url=${JDBC_DATABASE_URL}
#spring.datasource.username=${JDBC_DATABASE_USERNAME}
#spring.datasource.password=${JDBC_DATABASE_PASSWORD}

# en local, para ver los datos de bbdd pgAdmin4
# url para llamar al proyecto que está desplegado en heroku:
# https://antonio-demo-heroku.herokuapp.com/ se concatena el path del controllers
# Para acceder a la bbdd de la aplicacion que está desplegada en heroku,
# desde local usar: heroku pg:psql postgresql-convex-11709 --app antonio-demo-heroku
# Desde la web Heroku-postgres/settings